<%--
/**
 * SPDX-FileCopyrightText: (c) 2000 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */
--%>

<%
List<String> urls = new ArrayList<String>();
%>

<c:if test="<%= (portlets != null) && !portlets.isEmpty() %>">

	<%
	Set<String> portletResourceStaticURLs = (Set<String>)request.getAttribute(WebKeys.PORTLET_RESOURCE_STATIC_URLS);

	if (portletResourceStaticURLs == null) {
		portletResourceStaticURLs = new LinkedHashSet<String>();

		request.setAttribute(WebKeys.PORTLET_RESOURCE_STATIC_URLS, portletResourceStaticURLs);
	}

	if (useComboServletStaticURLGenerator) {
		ComboServletStaticURLGenerator comboServletStaticURLGenerator = new ComboServletStaticURLGenerator();

		comboServletStaticURLGenerator.setPortletResourceAccessors(portletResourceAccessors);
		comboServletStaticURLGenerator.setPredicate(predicate);
		comboServletStaticURLGenerator.setTimestamp(theme.getTimestamp());
		comboServletStaticURLGenerator.setURLPrefix(PortalUtil.getStaticResourceURL(request, themeDisplay.getCDNDynamicResourcesHost() + themeDisplay.getPathContext() + "/combo", "minifierType=&themeId=" + themeDisplay.getThemeId(), -1));
		comboServletStaticURLGenerator.setVisitedURLs(portletResourceStaticURLs);

		urls.addAll(comboServletStaticURLGenerator.generate(portlets));
	}
	else {
		PortletResourceStaticURLGenerator portletResourceStaticURLGenerator = new PortletResourceStaticURLGenerator();

		portletResourceStaticURLGenerator.setRequest(request);
		portletResourceStaticURLGenerator.setVisitedURLs(portletResourceStaticURLs);

		for (Portlet curPortlet : portlets) {
			urls.addAll(portletResourceStaticURLGenerator.generate(curPortlet, portletResourceAccessors));
		}
	}
	%>

</c:if>